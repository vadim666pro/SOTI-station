//
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
//
namespace Xilium.CefGlue.Interop
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.Runtime.InteropServices;
    using System.Security;
    
    [StructLayout(LayoutKind.Sequential, Pack = libcef.ALIGN)]
    [SuppressMessage("Microsoft.Design", "CA1049:TypesThatOwnNativeResourcesShouldBeDisposable")]
    internal unsafe struct cef_resource_bundle_t
    {
        internal cef_base_ref_counted_t _base;
        internal delegate* unmanaged<cef_resource_bundle_t*, int, cef_string_userfree*> _get_localized_string;
        internal delegate* unmanaged<cef_resource_bundle_t*, int, cef_binary_value_t*> _get_data_resource;
        internal delegate* unmanaged<cef_resource_bundle_t*, int, CefScaleFactor, cef_binary_value_t*> _get_data_resource_for_scale;
        
        // GetGlobal
        [DllImport(libcef.DllName, EntryPoint = "cef_resource_bundle_get_global", CallingConvention = libcef.CEF_CALL)]
        public static extern cef_resource_bundle_t* get_global();
        
        // AddRef
        
        public static void add_ref(cef_resource_bundle_t* self)
        {
            self->_base._add_ref((cef_base_ref_counted_t*)self);
        }
        
        // Release
        
        public static int release(cef_resource_bundle_t* self)
        {
            return self->_base._release((cef_base_ref_counted_t*)self);
        }
        
        // HasOneRef
        
        public static int has_one_ref(cef_resource_bundle_t* self)
        {
            return self->_base._has_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // HasAtLeastOneRef
        
        public static int has_at_least_one_ref(cef_resource_bundle_t* self)
        {
            return self->_base._has_at_least_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // GetLocalizedString
        
        public static cef_string_userfree* get_localized_string(cef_resource_bundle_t* self, int string_id)
        {
            return self->_get_localized_string(self, string_id);
        }
        
        // GetDataResource
        
        public static cef_binary_value_t* get_data_resource(cef_resource_bundle_t* self, int resource_id)
        {
            return self->_get_data_resource(self, resource_id);
        }
        
        // GetDataResourceForScale
        
        public static cef_binary_value_t* get_data_resource_for_scale(cef_resource_bundle_t* self, int resource_id, CefScaleFactor scale_factor)
        {
            return self->_get_data_resource_for_scale(self, resource_id, scale_factor);
        }
        
    }
}
