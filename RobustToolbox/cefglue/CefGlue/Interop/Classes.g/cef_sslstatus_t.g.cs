//
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
//
namespace Xilium.CefGlue.Interop
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.Runtime.InteropServices;
    using System.Security;
    
    [StructLayout(LayoutKind.Sequential, Pack = libcef.ALIGN)]
    [SuppressMessage("Microsoft.Design", "CA1049:TypesThatOwnNativeResourcesShouldBeDisposable")]
    internal unsafe struct cef_sslstatus_t
    {
        internal cef_base_ref_counted_t _base;
        internal delegate* unmanaged<cef_sslstatus_t*, int> _is_secure_connection;
        internal delegate* unmanaged<cef_sslstatus_t*, CefCertStatus> _get_cert_status;
        internal delegate* unmanaged<cef_sslstatus_t*, CefSslVersion> _get_sslversion;
        internal delegate* unmanaged<cef_sslstatus_t*, CefSslContentStatus> _get_content_status;
        internal delegate* unmanaged<cef_sslstatus_t*, cef_x509certificate_t*> _get_x509certificate;
        
        // AddRef
        
        public static void add_ref(cef_sslstatus_t* self)
        {
            self->_base._add_ref((cef_base_ref_counted_t*)self);
        }
        
        // Release
        
        public static int release(cef_sslstatus_t* self)
        {
            return self->_base._release((cef_base_ref_counted_t*)self);
        }
        
        // HasOneRef
        
        public static int has_one_ref(cef_sslstatus_t* self)
        {
            return self->_base._has_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // HasAtLeastOneRef
        
        public static int has_at_least_one_ref(cef_sslstatus_t* self)
        {
            return self->_base._has_at_least_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // IsSecureConnection
        
        public static int is_secure_connection(cef_sslstatus_t* self)
        {
            return self->_is_secure_connection(self);
        }
        
        // GetCertStatus
        
        public static CefCertStatus get_cert_status(cef_sslstatus_t* self)
        {
            return self->_get_cert_status(self);
        }
        
        // GetSSLVersion
        
        public static CefSslVersion get_sslversion(cef_sslstatus_t* self)
        {
            return self->_get_sslversion(self);
        }
        
        // GetContentStatus
        
        public static CefSslContentStatus get_content_status(cef_sslstatus_t* self)
        {
            return self->_get_content_status(self);
        }
        
        // GetX509Certificate
        
        public static cef_x509certificate_t* get_x509certificate(cef_sslstatus_t* self)
        {
            return self->_get_x509certificate(self);
        }
        
    }
}
