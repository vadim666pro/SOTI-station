//
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
//
namespace Xilium.CefGlue.Interop
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.Runtime.InteropServices;
    using System.Security;
    
    [StructLayout(LayoutKind.Sequential, Pack = libcef.ALIGN)]
    [SuppressMessage("Microsoft.Design", "CA1049:TypesThatOwnNativeResourcesShouldBeDisposable")]
    internal unsafe struct cef_post_data_element_t
    {
        internal cef_base_ref_counted_t _base;
        internal delegate* unmanaged<cef_post_data_element_t*, int> _is_read_only;
        internal delegate* unmanaged<cef_post_data_element_t*, void> _set_to_empty;
        internal delegate* unmanaged<cef_post_data_element_t*, cef_string_t*, void> _set_to_file;
        internal delegate* unmanaged<cef_post_data_element_t*, UIntPtr, void*, void> _set_to_bytes;
        internal delegate* unmanaged<cef_post_data_element_t*, CefPostDataElementType> _get_type;
        internal delegate* unmanaged<cef_post_data_element_t*, cef_string_userfree*> _get_file;
        internal delegate* unmanaged<cef_post_data_element_t*, UIntPtr> _get_bytes_count;
        internal delegate* unmanaged<cef_post_data_element_t*, UIntPtr, void*, UIntPtr> _get_bytes;
        
        // Create
        [DllImport(libcef.DllName, EntryPoint = "cef_post_data_element_create", CallingConvention = libcef.CEF_CALL)]
        public static extern cef_post_data_element_t* create();
        
        // AddRef
        
        public static void add_ref(cef_post_data_element_t* self)
        {
            self->_base._add_ref((cef_base_ref_counted_t*)self);
        }
        
        // Release
        
        public static int release(cef_post_data_element_t* self)
        {
            return self->_base._release((cef_base_ref_counted_t*)self);
        }
        
        // HasOneRef
        
        public static int has_one_ref(cef_post_data_element_t* self)
        {
            return self->_base._has_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // HasAtLeastOneRef
        
        public static int has_at_least_one_ref(cef_post_data_element_t* self)
        {
            return self->_base._has_at_least_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // IsReadOnly
        
        public static int is_read_only(cef_post_data_element_t* self)
        {
            return self->_is_read_only(self);
        }
        
        // SetToEmpty
        
        public static void set_to_empty(cef_post_data_element_t* self)
        {
            self->_set_to_empty(self);
        }
        
        // SetToFile
        
        public static void set_to_file(cef_post_data_element_t* self, cef_string_t* fileName)
        {
            self->_set_to_file(self, fileName);
        }
        
        // SetToBytes
        
        public static void set_to_bytes(cef_post_data_element_t* self, UIntPtr size, void* bytes)
        {
            self->_set_to_bytes(self, size, bytes);
        }
        
        // GetType
        
        public static CefPostDataElementType get_type(cef_post_data_element_t* self)
        {
            return self->_get_type(self);
        }
        
        // GetFile
        
        public static cef_string_userfree* get_file(cef_post_data_element_t* self)
        {
            return self->_get_file(self);
        }
        
        // GetBytesCount
        
        public static UIntPtr get_bytes_count(cef_post_data_element_t* self)
        {
            return self->_get_bytes_count(self);
        }
        
        // GetBytes
        
        public static UIntPtr get_bytes(cef_post_data_element_t* self, UIntPtr size, void* bytes)
        {
            return self->_get_bytes(self, size, bytes);
        }
        
    }
}
