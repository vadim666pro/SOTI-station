//
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
//
namespace Xilium.CefGlue.Interop
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.Runtime.InteropServices;
    using System.Security;
    
    [StructLayout(LayoutKind.Sequential, Pack = libcef.ALIGN)]
    [SuppressMessage("Microsoft.Design", "CA1049:TypesThatOwnNativeResourcesShouldBeDisposable")]
    internal unsafe struct cef_response_t
    {
        internal cef_base_ref_counted_t _base;
        internal delegate* unmanaged<cef_response_t*, int> _is_read_only;
        internal delegate* unmanaged<cef_response_t*, CefErrorCode> _get_error;
        internal delegate* unmanaged<cef_response_t*, CefErrorCode, void> _set_error;
        internal delegate* unmanaged<cef_response_t*, int> _get_status;
        internal delegate* unmanaged<cef_response_t*, int, void> _set_status;
        internal delegate* unmanaged<cef_response_t*, cef_string_userfree*> _get_status_text;
        internal delegate* unmanaged<cef_response_t*, cef_string_t*, void> _set_status_text;
        internal delegate* unmanaged<cef_response_t*, cef_string_userfree*> _get_mime_type;
        internal delegate* unmanaged<cef_response_t*, cef_string_t*, void> _set_mime_type;
        internal delegate* unmanaged<cef_response_t*, cef_string_userfree*> _get_charset;
        internal delegate* unmanaged<cef_response_t*, cef_string_t*, void> _set_charset;
        internal delegate* unmanaged<cef_response_t*, cef_string_t*, cef_string_userfree*> _get_header_by_name;
        internal delegate* unmanaged<cef_response_t*, cef_string_t*, cef_string_t*, int, void> _set_header_by_name;
        internal delegate* unmanaged<cef_response_t*, cef_string_multimap*, void> _get_header_map;
        internal delegate* unmanaged<cef_response_t*, cef_string_multimap*, void> _set_header_map;
        internal delegate* unmanaged<cef_response_t*, cef_string_userfree*> _get_url;
        internal delegate* unmanaged<cef_response_t*, cef_string_t*, void> _set_url;
        
        // Create
        [DllImport(libcef.DllName, EntryPoint = "cef_response_create", CallingConvention = libcef.CEF_CALL)]
        public static extern cef_response_t* create();
        
        // AddRef
        
        public static void add_ref(cef_response_t* self)
        {
            self->_base._add_ref((cef_base_ref_counted_t*)self);
        }
        
        // Release
        
        public static int release(cef_response_t* self)
        {
            return self->_base._release((cef_base_ref_counted_t*)self);
        }
        
        // HasOneRef
        
        public static int has_one_ref(cef_response_t* self)
        {
            return self->_base._has_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // HasAtLeastOneRef
        
        public static int has_at_least_one_ref(cef_response_t* self)
        {
            return self->_base._has_at_least_one_ref((cef_base_ref_counted_t*)self);
        }
        
        // IsReadOnly
        
        public static int is_read_only(cef_response_t* self)
        {
            return self->_is_read_only(self);
        }
        
        // GetError
        
        public static CefErrorCode get_error(cef_response_t* self)
        {
            return self->_get_error(self);
        }
        
        // SetError
        
        public static void set_error(cef_response_t* self, CefErrorCode error)
        {
            self->_set_error(self, error);
        }
        
        // GetStatus
        
        public static int get_status(cef_response_t* self)
        {
            return self->_get_status(self);
        }
        
        // SetStatus
        
        public static void set_status(cef_response_t* self, int status)
        {
            self->_set_status(self, status);
        }
        
        // GetStatusText
        
        public static cef_string_userfree* get_status_text(cef_response_t* self)
        {
            return self->_get_status_text(self);
        }
        
        // SetStatusText
        
        public static void set_status_text(cef_response_t* self, cef_string_t* statusText)
        {
            self->_set_status_text(self, statusText);
        }
        
        // GetMimeType
        
        public static cef_string_userfree* get_mime_type(cef_response_t* self)
        {
            return self->_get_mime_type(self);
        }
        
        // SetMimeType
        
        public static void set_mime_type(cef_response_t* self, cef_string_t* mimeType)
        {
            self->_set_mime_type(self, mimeType);
        }
        
        // GetCharset
        
        public static cef_string_userfree* get_charset(cef_response_t* self)
        {
            return self->_get_charset(self);
        }
        
        // SetCharset
        
        public static void set_charset(cef_response_t* self, cef_string_t* charset)
        {
            self->_set_charset(self, charset);
        }
        
        // GetHeaderByName
        
        public static cef_string_userfree* get_header_by_name(cef_response_t* self, cef_string_t* name)
        {
            return self->_get_header_by_name(self, name);
        }
        
        // SetHeaderByName
        
        public static void set_header_by_name(cef_response_t* self, cef_string_t* name, cef_string_t* value, int overwrite)
        {
            self->_set_header_by_name(self, name, value, overwrite);
        }
        
        // GetHeaderMap
        
        public static void get_header_map(cef_response_t* self, cef_string_multimap* headerMap)
        {
            self->_get_header_map(self, headerMap);
        }
        
        // SetHeaderMap
        
        public static void set_header_map(cef_response_t* self, cef_string_multimap* headerMap)
        {
            self->_set_header_map(self, headerMap);
        }
        
        // GetURL
        
        public static cef_string_userfree* get_url(cef_response_t* self)
        {
            return self->_get_url(self);
        }
        
        // SetURL
        
        public static void set_url(cef_response_t* self, cef_string_t* url)
        {
            self->_set_url(self, url);
        }
        
    }
}
